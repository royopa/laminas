# -*- coding: utf-8 -*-
"""cvm_informacoes_lamina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lZ30mpm-H113gHZuSVya5IkFHnQlShQL
"""


from requests_html import HTMLSession
import requests
from tqdm import tqdm
import os
from zipfile import ZipFile


def download_file(url, file_name):
    response = requests.get(url, stream=True)
    with open(file_name, "wb") as handle:
        for data in tqdm(response.iter_content()):
            handle.write(data)
    handle.close()

    
def create_download_folder():
    # Create directory
    dirName = os.path.join('downloads')
 
    try:
        # Create target Directory
        os.mkdir(dirName)
        print("Directory", dirName, "Created ")
    except Exception:
        print("Directory", dirName, "already exists")


def extract_file(path_file):
    with ZipFile(path_file, 'r') as zipObj:
    # Get a list of all archived file names from the zip
        list_of_file_names = zipObj.namelist()
        # Iterate over the file names
        for file_name in list_of_file_names:
            if file_name.endswith('.csv'):
                print('Extracting', file_name)
                zipObj.extract(file_name, path='downloads')


def get_list_files_cvm_site(url):
    session = HTMLSession()

    r = session.get(url)    

    if r.status_code != 200:
        print('Erro ao acessar site da CVM')
        return False

    links = []
    for link in r.html.absolute_links:
        if not link.endswith('.zip'):
            continue
        links.append(link)

    return links


def download_files(links):
    for link in links:
        print(link)
        if not link.endswith('.zip'):
            continue
        
        file_name = link.split('/')[-1]
        file_path = os.path.join('downloads', file_name)
        
        if os.path.exists(file_path):
            print('Arquivo já baixado, indo para o próximo', file_path)
            continue

        print('Fazendo download do arquivo', link)
        download_file(link, file_path)
        print('Extraindo arquivo', file_path)
        extract_file(file_path)
        print('Removendo arquivo', file_path)
        os.remove(file_path)


def main():
    # main
    urls = [
        'http://dados.cvm.gov.br/dados/FI/DOC/LAMINA/DADOS/'
    ]

    create_download_folder()

    for url in urls:
        links = get_list_files_cvm_site(url)
        download_files(links)
    